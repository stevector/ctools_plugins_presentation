@import "zen";

$color-example-a: #FCC;
$color-example-b: #CFC;
$color-example-c: #CCF;
$color-example-d: #FFC;
$color-example-e: #CFF;

$zen-gutter-width: 20px !default;
#examples,
#what-else ul,
#what-does-sass-do {
  .zen-wrapper {
      $zen-column-count: 2;
    .col-1 {
      @include zen-clear();
      @include zen-grid-item(1, 1);
    }
    .col-2 {
      @include zen-grid-item(1, 2);
    }
  }
}

#what-else ul {
    $zen-column-count: 2;
  .col-1 {
    @include zen-clear();
    @include zen-grid-item(1, 1);
  }
  .col-2 {
    @include zen-grid-item(1, 2);
  }
}

#counting-on-your-keys {

  li {
    text-align: center;
  }
  li:nth-child(odd) { background:#f1f1f1 }
  li:nth-child(even) { background:#d1d1d1 }
  
  ul:nth-child(1) {  
    $zen-column-count: 10;
    .col-1 { @include zen-grid-item(1, 1); }
    .col-2 { @include zen-grid-item(1, 2); }
    .col-3 { @include zen-grid-item(1, 3); }
    .col-4 { @include zen-grid-item(1, 4); }
    .col-5 { @include zen-grid-item(1, 5); }
    .col-6 { @include zen-grid-item(1, 6); }
    .col-7 { @include zen-grid-item(1, 7); }
    .col-8 { @include zen-grid-item(1, 8); }
    .col-9 { @include zen-grid-item(1, 9); }
    .col-10 { @include zen-grid-item(1, 10); }
  }
  
  ul:nth-child(2) {  
    $zen-column-count: 10;
    @include zen-clear();
    .col-1 { @include zen-grid-item(3, 1); }
    .col-2 { @include zen-grid-item(4, 4); }
    .col-3 { @include zen-grid-item(3, 8); }
  }
}

#counting-on-your-keys-right {

  li {
    text-align: center;
  }
  li:nth-child(odd) { background:#f1f1f1 }
  li:nth-child(even) { background:#d1d1d1 }

  ul:nth-child(1) {
    $zen-column-count: 10;
    .col-1 { @include zen-grid-item(1, 1, right); }
    .col-2 { @include zen-grid-item(1, 2, right); }
    .col-3 { @include zen-grid-item(1, 3, right); }
    .col-4 { @include zen-grid-item(1, 4, right); }
    .col-5 { @include zen-grid-item(1, 5, right); }
    .col-6 { @include zen-grid-item(1, 6, right); }
    .col-7 { @include zen-grid-item(1, 7, right); }
    .col-8 { @include zen-grid-item(1, 8, right); }
    .col-9 { @include zen-grid-item(1, 9, right); }
    .col-10 { @include zen-grid-item(1, 10, right); }
  }

  ul:nth-child(2) {
    $zen-column-count: 10;
    @include zen-clear(both);
    .col-1 { @include zen-grid-item(6, 1, right); }
    .col-2 { @include zen-grid-item(4, 7, right); }
  }
}

#examples {
  text-align: center;
}


.block-a {
  background: $color-example-a;
}

.block-b {
  background: $color-example-b;
}

.block-c {
  background: $color-example-c;
}

.block-d {
  background: $color-example-d;
}

.block-e {
  background: $color-example-e;
}



#example-2 {
  $zen-column-count: 3; // Set the total number of columns in the grid.
  $zen-gutter-width: 10px;

  .example-container {
    @include zen-grid-container; // Apply this mixin to the container.
  }
  .block-a {
    @include zen-grid-item(2, 1);
  }
  .block-b {
    @include zen-grid-item(1, 1, right);
  }
  .block-c {
    @include zen-clear(right);
    @include zen-grid-item(1, 1, right);
  }
  .block-d {
    @include zen-clear(both);
    @include zen-grid-item(3, 1);
  }
}

#example-3 {
  $zen-column-count: 6; // Set the total number of columns in the grid.
  $zen-gutter-width: 10px;

  .example-container {
    @include zen-grid-container; // Apply this mixin to the container.
  }
  .block-a {
    @include zen-grid-item(3, 3);
  }
  .block-b {
    @include zen-grid-item(2, 1);
  }
  .block-c {
    @include zen-grid-item(1, 1, right);
  }
  .block-d {
    @include zen-clear(right);
    @include zen-grid-item(1, 1, right);
  }
}


#what-else ul,
.zen-wrapper {
  pre {
    width: 100%;
  }
}



